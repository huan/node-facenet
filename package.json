{
  "name": "facenet",
  "version": "0.10.7",
  "description": "Solve face verification, recognition and clustering problems: a TensorFlow backed FaceNet implementation for Node.js.",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "dependencies": {
    "@types/ndarray": "^1.0.8",
    "argparse": "^2.0.1",
    "blessed": "^0.1.81",
    "blessed-contrib": "^4.8.21",
    "brolog": "^1.12.4",
    "canvas": "2.6.1",
    "chinese-whispers": "^0.2.11",
    "glob": "^7.1.6",
    "mkdirp": "^1.0.4",
    "printf": "^0.6.0",
    "python-bridge": "^1.1.0",
    "rimraf": "^3.0.2",
    "tar": "^6.1.0",
    "update-notifier": "^5.1.0"
  },
  "peerDependencies": {
    "flash-store": "^0.20",
    "numjs": "^0.16"
  },
  "devDependencies": {
    "@chatie/eslint-config": "^0.12.3",
    "@chatie/git-scripts": "^0.6.2",
    "@chatie/semver": "^0.4.7",
    "@chatie/tsconfig": "^0.16.2",
    "@types/app-root-path": "^1.2.4",
    "@types/argparse": "^2.0.5",
    "@types/blessed": "^0.1.17",
    "@types/glob": "^7.1.3",
    "@types/gm": "^1.18.9",
    "@types/mkdirp": "^1.0.1",
    "@types/numjs": "^0.14.5",
    "@types/printf": "^0.2.1",
    "@types/rimraf": "^3.0.0",
    "@types/tape": "^4.13.0",
    "@types/tar": "^4.0.4",
    "@types/update-notifier": "^5.0.0",
    "coveralls": "^3.1.0",
    "cross-env": "^7.0.3",
    "flash-store": "^0.20.7",
    "gm": "^1.23.1",
    "jsdoc-to-markdown": "^7.0.0",
    "numjs": "^0.16.0",
    "nyc": "^15.1.0",
    "pkg-jq": "^0.2.11",
    "shx": "^0.3.3",
    "tape": "^5.1.1",
    "tstest": "^0.4.10"
  },
  "scripts": {
    "check-version": "./bin/check-version.sh",
    "clean": "npm run clean:dist && npm run clean:python3 && npm run clean:models",
    "clean:dist": "shx rm -fr dist/*",
    "clean:python3": "shx rm -fr python3/*",
    "clean:models": "shx rm -fr models/*",
    "dist": "npm run clean:dist && tsc && shx cp src/python3/*.py dist/src/python3/",
    "doc": "npm run dist && echo '# Facenet v'$(jq -r .version package.json)' Documentation\n' > docs/index.md && jsdoc2md dist/src/{facenet.js,face.js,} >> docs/index.md",
    "demo": "npm run example:demo",
    "example:demo": "ts-node examples/demo.ts",
    "example:visualize": "ts-node examples/visualize",
    "lint": "npm run lint:es && npm run lint:ts",
    "lint:backup": "npm run lint:es && npm run lint:ts && npm run lint:py",
    "lint:ts": "tsc --noEmit",
    "lint:es": "eslint --ignore-pattern tests/fixtures/ '{bin,examples,scripts,src,tests}/**/*.ts' || true",
    "lint:py": ". python3/bin/activate && PYTHONPATH='src/:python3/facenet/src/' pylint --contextmanager-decorators=contextlib.contextmanager,tf_contextlib.contextmanager src/python3/*.py && npm run lint:flake8 && npm run lint:mypy",
    "lint:flake8": "flake8 src/python3/*.py",
    "lint:mypy": "mypy --disallow-untyped-defs src/python3/*.py",
    "manager": "npm run facenet-manager",
    "facenet-manager": "ts-node bin/facenet-manager",
    "preinstall": "npm run check-version",
    "postinstall": "shx rm -fr node_modules/npm && npm run venv && npm run postinstall:facenet && npm run postinstall:models",
    "postinstall:facenet": "cd python3 && if [ -d facenet ]; then (cd facenet && git pull); else git clone https://github.com/huan/python-facenet.git facenet; fi && cd -",
    "postinstall:models": "set -e && if [ ! -d models ]; then mkdir models; fi && cd models && if [ ! -e model.tar.bz2 -a ! -e model-*.meta ]; then curl --silent --location --output model.tar.bz2.tmp https://github.com/huan/node-facenet/releases/download/v0.1.9/model-20170512.tar.bz2; mv model.tar.bz2.tmp model.tar.bz2; fi && if [ ! -f model-*.meta ]; then tar jxvf model.tar.bz2; rm -f model.tar.bz2; fi && cd -",
    "start": "echo `npm run demo` to show a demo.",
    "test": "npm run check-version && npm run lint && npm run test:py && npm run test:ts",
    "test:coverage": "nyc report --reporter=text-lcov | coveralls",
    "test:ts": "tape -r ts-node/register \"src/**/*.spec.ts\" \"tests/**/*.spec.ts\"",
    "test:py": ". python3/bin/activate && PYTHONPATH='src/:python3/facenet/src/' pytest src/ tests/",
    "test:pack": "bash -x scripts/npm-pack-testing.sh",
    "venv": "python3 -m venv python3 && . python3/bin/activate && pip3 install -r requirements.txt && pip3 install --upgrade numpy >/dev/stdout"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/huan/node-facenet.git"
  },
  "keywords": [
    "facenet",
    "openface",
    "deepface",
    "face",
    "recognition",
    "verification",
    "clustering",
    "machine",
    "deep",
    "learning",
    "neural",
    "network",
    "tensorflow"
  ],
  "author": "Huan LI <zixia@zixia.net>",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/huan/node-facenet/issues"
  },
  "homepage": "https://github.com/huan/node-facenet#readme",
  "files": [
    "bin/",
    "dist/",
    "src/",
    "CHANGELOG",
    "docs/images/facenet-icon.png",
    "LICENSE",
    "package.json",
    "README.md",
    "requirements.txt"
  ],
  "bin": {
    "facenet-manager": "dist/bin/facenet-manager.js"
  },
  "facenet": {
    "env": {
      "PYTHON_FACENET_MODEL_PATH": "models/",
      "PYTHON_FACENET_MODEL_URL": "https://github.com/huan/node-facenet/releases/download/v0.1.9/model-20170512.tar.bz2"
    }
  },
  "engines": {
    "node": ">= 7"
  },
  "publishConfig": {
    "access": "public",
    "tag": "next"
  },
  "git": {
    "scripts": {
      "pre-push": "npx git-scripts-pre-push"
    }
  }
}
